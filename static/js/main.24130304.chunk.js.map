{"version":3,"sources":["Components/Button.js","Context/ContactContext.js","Components/Form.js","Components/Add.js","Components/Contacts.js","Components/Home.js","Components/Header.js","Components/Edit.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","react_default","a","createElement","onClick","e","preventDefault","clickFunc","className","deleteBtn","buttonText","ContactContext","createContext","ContactProvider","state","contacts","addContact","_ref","name","number","id","_this","setState","prevState","concat","Object","toConsumableArray","deleteContact","filter","contact","editContact","data","newContacts","map","objectSpread","findContact","find","Provider","value","this","children","Component","Form","error","onChange","defineProperty","target","onBackButtonClick","history","push","onSubmit","uuid","context","Fragment","Button_Button","style","fontSize","color","textAlign","htmlFor","type","WrappedClass","withRouter","WrappedComponent","contextType","Add","Components_Form","Contacts","onEditBtnClick","_this2","_this$props$contact","React","Home","Consumer","length","Components_Contacts","key","Header","Edit","contactData","match","params","App","Context_ContactContext","Header_Header","BrowserRouter","basename","process","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24130304.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport \"../css/Button.css\"\r\nexport default function Button(props) {\r\n// props are buttonText and OnClickFunction;    \r\nconst onButtonClick = (e) =>{\r\n    e.preventDefault();\r\n    props.clickFunc();\r\n    \r\n  }  \r\n  return (\r\n       <button onClick = {onButtonClick} className= {props.deleteBtn ? \"btn delete\" : \"btn\"}><span className= {props.deleteBtn ? \"btn__text delete__text\" : \"btn__text\"}>{props.buttonText}</span></button>\r\n  )\r\n}","import React, { Component, createContext } from \"react\";\r\n\r\nexport const ContactContext = createContext();\r\n\r\nclass ContactProvider extends Component {\r\n  state = {\r\n    contacts: []\r\n  };\r\n  addContact = ({ name, number, id }) => {\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, { name, number, id }]\r\n    }));\r\n  };\r\n  deleteContact = id => {\r\n    this.setState({\r\n      contacts: this.state.contacts.filter(contact => contact.id !== id)\r\n    });\r\n  };\r\n  editContact = (id, data) => {\r\n  const newContacts =   this.state.contacts.map(contact => {\r\n      if (contact.id === id) {\r\n        return {\r\n          ...contact,\r\n          ...data\r\n        };\r\n      } else {\r\n        return contact;\r\n      }\r\n    });\r\n  this.setState({\r\n     contacts : [...newContacts]\r\n  })  \r\n  };\r\n  findContact = id => {\r\n    const data =  this.state.contacts.find(contact => contact.id === id);\r\n    return data;\r\n  };\r\n  render() {\r\n    return (\r\n      <ContactContext.Provider\r\n        value={{\r\n          contacts: this.state.contacts,\r\n          addContact: this.addContact,\r\n          deleteContact: this.deleteContact,\r\n          findContact : this.findContact,\r\n          editContact : this.editContact\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </ContactContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactProvider;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"./Button\";\r\nimport { ContactContext } from \"../Context/ContactContext\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport uuid from \"uuid/v1\";\r\nimport \"../css/Form.css\";\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    error: \"\"\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  onBackButtonClick = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n  onSubmit = () => {\r\n    const data = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      id: uuid()\r\n    };\r\n    if (!this.state.name || !this.state.number) {\r\n      this.setState({\r\n        error: \"the Fields Cannot Be Left Empty\"\r\n      });\r\n    } else {\r\n      this.context.addContact(data);\r\n      this.props.history.push(\"/\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Button buttonText=\"Go Back\" clickFunc={this.onBackButtonClick} />\r\n        <div\r\n          className=\"heading\"\r\n          style={{ fontSize: \"2rem\", color: \"blue\", textAlign: \"center\" }}\r\n        >\r\n          Add Contact Here\r\n        </div>\r\n        <form className=\"form\">\r\n          <div className=\"form__values\">\r\n            <label htmlFor=\"name\" className=\"form__label\">\r\n              Name\r\n            </label>\r\n            <input\r\n              className=\"form__input\"\r\n              value={this.state.name}\r\n              name=\"name\"\r\n              type=\"text\"\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <div className=\"form__values\">\r\n            <label htmlFor=\"number\" className=\"form__label\">\r\n              Number\r\n            </label>\r\n            <input\r\n              className=\"form__input\"\r\n              value={this.state.number}\r\n              name=\"number\"\r\n              type=\"text\"\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n        </form>\r\n        <div className=\"input__data\"> name : {this.state.name}</div>\r\n        <div className=\"input__data\"> number : {this.state.number}</div>\r\n        <Button clickFunc={this.onSubmit} buttonText=\"Add Contact\" />\r\n        {this.state.error ? (\r\n          <span className=\"error\">{this.state.error}</span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n// warning : Function components do not support contextType.\r\n// the wrappedClass is a fix for that;\r\nconst WrappedClass = withRouter(Form);\r\nWrappedClass.WrappedComponent.contextType = ContactContext;\r\nexport default WrappedClass;\r\n","import React, { Component } from 'react'\r\nimport Form from  \"./Form\";\r\nexport default class Add extends Component {\r\n  render() {\r\n    return (\r\n      <div className = \"form__container\">\r\n         <Form/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\nimport { ContactContext } from \"../Context/ContactContext\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"../css/Contact.css\";\r\nclass Contacts extends React.Component {\r\n  onClick = id => {\r\n    this.context.deleteContact(id);\r\n  };\r\n  onEditBtnClick = id => {\r\n    this.props.history.push(`/edit/${id}`);\r\n  };\r\n  render() {\r\n    const { name, number, id } = this.props.contact;\r\n    return (\r\n      <div className=\"contact\">\r\n            <div className=\"contact__text\"> Name : {name}</div>\r\n            <div className=\"contact__text\"> Number : {number}</div>\r\n            <Button\r\n              buttonText=\"Edit\"\r\n              clickFunc={() => {\r\n                this.onEditBtnClick(id);\r\n              }}\r\n            />\r\n            <Button\r\n              deleteBtn={true}\r\n              buttonText=\"delete\"\r\n              clickFunc={() => {\r\n                this.onClick(id);\r\n              }}\r\n            />\r\n       </div>     \r\n    );\r\n  }\r\n}\r\n\r\nContacts.contextType = ContactContext;\r\nexport default withRouter(Contacts);\r\n","import React, { Component } from \"react\";\r\nimport Button from \"./Button\";\r\nimport Contacts from \"./Contacts\";\r\nimport { ContactContext } from \"../Context/ContactContext\";\r\nimport \"../css/Home.css\";\r\n class Home extends Component {\r\n  // State of the Application\r\n  onClick = (e) => {\r\n    this.props.history.push('add'); \r\n  };\r\n  render() {\r\n    return (\r\n      <ContactContext.Consumer>\r\n         {\r\n           ({contacts}) => (\r\n            <div className=\"home\">\r\n            <Button buttonText=\"Add Contact\" clickFunc={this.onClick} />\r\n            {contacts.length === 0 ? (\r\n              <div className=\"home__heading\">\r\n                no Contacts Add A Contact TO View It Here\r\n              </div>\r\n            ) : (\r\n              contacts.map(contact => (<Contacts key = {contact.id} contact={contact} />))\r\n            )}\r\n          </div>\r\n           )\r\n         }\r\n\r\n\r\n      </ContactContext.Consumer>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport \"../css/Header.css\";\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <h3 className=\"heading\">Phone Directory</h3>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ContactContext } from \"../Context/ContactContext\";\r\nimport Button from './Button';\r\nimport \"../css/Form.css\";\r\nclass Edit extends Component {\r\n  state = {\r\n    name : \"\",\r\n    number : \"\",\r\n    id :  \"\"\r\n  };\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  onSubmit = () => {\r\n    const data = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n    if(!this.state.name || !this.state.number){\r\n        this.setState({\r\n           error : \"the Fields Cannot Be Left Empty\"\r\n        })\r\n    }else {\r\n    this.context.editContact(this.state.id,data);\r\n    this.props.history.push(\"/\");\r\n    }\r\n    \r\n  };\r\n  componentDidMount() {\r\n    const contactData = this.context.findContact(this.props.match.params.id);\r\n    this.setState({\r\n         name : contactData.name,\r\n         number : contactData.number,\r\n         id : contactData.id,\r\n    })\r\n} \r\n  render() {\r\n    return (\r\n      <div className=\"form__container\">\r\n        \r\n      <React.Fragment>\r\n        <Button buttonText = \"Go Back\" clickFunc = {this.onBackButtonClick}/>\r\n        <div\r\n          className=\"heading\"\r\n          style={{ fontSize: \"2rem\", color: \"blue\", textAlign: \"center\" }}\r\n        >\r\n          Add Contact Here\r\n        </div>\r\n        <form className = \"form\">\r\n        <div className=\"form__values\">\r\n            <label htmlFor=\"name\" className=\"form__label\">\r\n              Name\r\n            </label>\r\n            <input\r\n              className=\"form__input\"  \r\n              value={this.state.name}\r\n              name=\"name\"\r\n              type=\"text\"\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <div className=\"form__values\">\r\n            <label htmlFor=\"number\" className=\"form__label\">\r\n              Number\r\n            </label>\r\n            <input\r\n              className=\"form__input\"  \r\n              value={this.state.number}\r\n              name=\"number\"\r\n              type=\"text\"\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n        </form>\r\n        <div className=\"input__data\"> name : {this.state.name}</div>\r\n        <div className=\"input__data\"> number : {this.state.number}</div>\r\n        <Button clickFunc={this.onSubmit} buttonText=\"Add Contact\" />\r\n        {this.state.error ? <span className=\"error\">{this.state.error}</span> : \"\"}\r\n      </React.Fragment>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEdit.contextType = ContactContext;\r\nexport default Edit;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport {BrowserRouter , Route} from 'react-router-dom';\nimport Add from './Components/Add';\nimport Home from './Components/Home';\nimport Header from './Components/Header';\nimport ContactProvider from './Context/ContactContext';\nimport Edit from './Components/Edit';\nclass App extends Component {\n  render() {\n    return (\n      <ContactProvider>\n      <div className=\"container\">\n         <Header/>\n        <BrowserRouter basename = {process.env.PUBLIC_URL}>\n        <React.Fragment>\n          <Route exact path = \"/\" component = {Home}/>\n          <Route exact path = \"/add\" component = {Add}/>\n          <Route exact path = \"/edit/:id\" component = {Edit}/>\n        </React.Fragment>\n        </BrowserRouter>\n      </div>\n      </ContactProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}